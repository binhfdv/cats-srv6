# root user
https://linuxconfig.org/allow-ssh-root-login-on-ubuntu-20-04-focal-fossa-linux


git clone https://github.com/opennetworkinglab/ngsdn-tutorial.git

###
notes for exercises from the above git repo
te = table_entry["IngressPipeImpl.l2_exact_table"](action = "IngressPipeImpl.set_egress_port")

te.match["hdr.ethernet.dst_addr"] = ("00:00:00:00:00:1B")

te.action["port_num"] = ("4")
###

# install maven
apt update
apt install maven

make netcfg
make app-reload

docker exec -it  mininet sh
echo "deb http://archive.debian.org/debian stretch main" > /etc/apt/sources.list && chmod 1777 /tmp && rm -rf /var/lib/apt/lists/* && apt-get update && apt install bridge-utils

bash run.sh

# worker 1
ping 192.168.1.20

# worker 2
ping 10.100.200.20

# worker 3
ping 192.168.0.20


while sleep 1; do curl 10.96.10.10:5000 --interface uesimtun0; done

root@mininet-GB-BSi5-6200:~/P4-MUP-SRv6# cat version_upf.sh # when 
# route del -net 10.60.0.0/24 gw 192.168.0.20 on worker3
docker exec -it mininet /mininet/host-cmd h2a ip route add  10.60.0.0/24 dev  h2a-eth0




########### demo ###########
########## using upf

# upf at worker 3: root@worker3
route del -net 10.60.0.0/24 gw 192.168.0.20

./bin/upf

# 5gc at worker: worker@worker-desktop:~/free5gc$ 
./run.sh

# gnb and ue at worker 2: 
./build/nr-gnb -c ./config/free5gc-gnb.yaml

# ping from ue to service through upf
./build/nr-ue -c ./config/free5gc-ue.yaml 

########## using MUP-SRv6

# worker 3
route add -net 10.60.0.0/24 gw 192.168.0.20 on worker3



